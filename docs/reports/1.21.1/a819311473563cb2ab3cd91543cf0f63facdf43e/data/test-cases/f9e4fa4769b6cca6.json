{
  "uid" : "f9e4fa4769b6cca6",
  "name" : "test_sign_in_multiple_stages",
  "fullName" : "cardano_node_tests.tests.test_pools.TestStakePool#test_sign_in_multiple_stages",
  "historyId" : "7edd06c2cee92db014f8af5b2e4ba38b",
  "time" : {
    "start" : 1601993244274,
    "stop" : 1601993254530,
    "duration" : 10256
  },
  "description" : "Create and register a stake pool with TX signed in multiple stages.",
  "descriptionHtml" : "<p>Create and register a stake pool with TX signed in multiple stages.</p>\n",
  "status" : "broken",
  "statusMessage" : "cardano_node_tests.utils.clusterlib.CLIError: An error occurred running a CLI command `cardano-cli shelley transaction submit --testnet-magic 42 --tx-file test_sign_in_multiple_stages_qhbv_tx.witnessed --shelley-mode`: Shelley command failed: transaction submit  Error: Error while submitting tx: ApplyTxError [LedgerFailure (UtxowFailure (MissingVKeyWitnessesUTXOW (WitHashes (fromList [KeyHash \"49feb98fb0f8c19ea043b8797b2f3c8fea0aa072f0c193df847f8703\",KeyHash \"a1f3220bcd59e919a31e29660280db11f2dbeeefb0883685e264de5e\",KeyHash \"eb272da081567abe0bd3d97ffa397402e1e43dee9b08ee4954da093a\"]))))]",
  "statusTrace" : "self = <cardano_node_tests.tests.test_pools.TestStakePool object at 0x7fd8ec071820>\ncluster_manager = <cardano_node_tests.utils.parallel_run.ClusterManager object at 0x7fd8ec0d4e50>\ncluster = <cardano_node_tests.utils.clusterlib.ClusterLib object at 0x7fd8ec0d4dc0>\n\n    @allure.link(helpers.get_vcs_link())\n    def test_sign_in_multiple_stages(\n        self,\n        cluster_manager: parallel_run.ClusterManager,\n        cluster: clusterlib.ClusterLib,\n    ):\n        \"\"\"Create and register a stake pool with TX signed in multiple stages.\"\"\"\n        rand_str = clusterlib.get_rand_str(4)\n        temp_template = f\"{helpers.get_func_name()}_{rand_str}\"\n    \n        pool_data = clusterlib.PoolData(\n            pool_name=f\"pool_{rand_str}\",\n            pool_pledge=5,\n            pool_cost=3,\n            pool_margin=0.01,\n        )\n    \n        # create pool owners\n        pool_owners = clusterlib_utils.create_pool_users(\n            cluster_obj=cluster,\n            name_template=temp_template,\n            no_of_addr=2,\n        )\n    \n        # fund source address\n        clusterlib_utils.fund_from_faucet(\n            pool_owners[0].payment,\n            cluster_obj=cluster,\n            faucet_data=cluster_manager.cache.addrs_data[\"user1\"],\n            amount=900_000_000,\n        )\n    \n        # create node VRF key pair\n        node_vrf = cluster.gen_vrf_key_pair(node_name=pool_data.pool_name)\n        # create node cold key pair and counter\n        node_cold = cluster.gen_cold_key_pair_and_counter(node_name=pool_data.pool_name)\n    \n        # create stake pool registration cert\n        pool_reg_cert_file = cluster.gen_pool_registration_cert(\n            pool_data=pool_data,\n            vrf_vkey_file=node_vrf.vkey_file,\n            cold_vkey_file=node_cold.vkey_file,\n            owner_stake_vkey_files=[p.stake.vkey_file for p in pool_owners],\n        )\n    \n        src_address = pool_owners[0].payment.address\n        src_init_balance = cluster.get_address_balance(src_address)\n    \n        # keys to sign the TX with\n        witness_skeys = (\n            pool_owners[0].payment.skey_file,\n            pool_owners[1].payment.skey_file,\n            pool_owners[0].stake.skey_file,\n            pool_owners[1].stake.skey_file,\n            node_cold.skey_file,\n        )\n    \n        tx_files = clusterlib.TxFiles(\n            certificate_files=[\n                pool_reg_cert_file,\n            ],\n        )\n    \n        fee = cluster.calculate_tx_fee(\n            src_address=src_address,\n            tx_name=temp_template,\n            tx_files=tx_files,\n            witness_count_add=len(witness_skeys),\n        )\n    \n        tx_raw_output = cluster.build_raw_tx(\n            src_address=src_address,\n            tx_name=temp_template,\n            tx_files=tx_files,\n            fee=fee,\n        )\n    \n        # create witness file for each key\n        witness_files = [\n            cluster.witness_tx(\n                tx_body_file=tx_raw_output.out_file, tx_name=temp_template, signing_key_files=[skey]\n            )\n            for skey in witness_skeys\n        ]\n    \n        # sign TX using witness files\n        tx_witnessed_file = cluster.assemble_tx(\n            tx_body_file=tx_raw_output.out_file, witness_files=witness_files, tx_name=temp_template\n        )\n        # create and register pool\n>       cluster.submit_tx(tx_witnessed_file)\n\n/home/martink/Source/repos/cardano-node-tests/cardano_node_tests/tests/test_pools.py:950: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/home/martink/Source/repos/cardano-node-tests/cardano_node_tests/utils/clusterlib.py:1169: in submit_tx\n    self.cli(\n/home/martink/Source/repos/cardano-node-tests/cardano_node_tests/utils/clusterlib.py:261: in cli\n    return self.cli_base(cmd)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <cardano_node_tests.utils.clusterlib.ClusterLib object at 0x7fd8ec0d4dc0>\ncli_args = ['cardano-cli', 'shelley', 'transaction', 'submit', '--testnet-magic', '42', ...]\n\n    def cli_base(self, cli_args: List[str]) -> CLIOut:\n        \"\"\"Run command.\"\"\"\n        cmd_str = \" \".join(cli_args)\n        LOGGER.debug(\"Running `%s`\", cmd_str)\n    \n        # re-run the command when running into\n        # Network.Socket.connect: <socket: X>: resource exhausted (Resource temporarily unavailable)\n        for __ in range(3):\n            p = subprocess.Popen(cli_args, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n            stdout, stderr = p.communicate()\n    \n            if p.returncode == 0:\n                break\n    \n            stderr_dec = stderr.decode()\n            err_msg = f\"An error occurred running a CLI command `{cmd_str}`: {stderr_dec}\"\n            if \"resource exhausted\" in stderr_dec:\n                LOGGER.error(err_msg)\n                time.sleep(1)\n                continue\n>           raise CLIError(err_msg)\nE           cardano_node_tests.utils.clusterlib.CLIError: An error occurred running a CLI command `cardano-cli shelley transaction submit --testnet-magic 42 --tx-file test_sign_in_multiple_stages_qhbv_tx.witnessed --shelley-mode`: Shelley command failed: transaction submit  Error: Error while submitting tx: ApplyTxError [LedgerFailure (UtxowFailure (MissingVKeyWitnessesUTXOW (WitHashes (fromList [KeyHash \"49feb98fb0f8c19ea043b8797b2f3c8fea0aa072f0c193df847f8703\",KeyHash \"a1f3220bcd59e919a31e29660280db11f2dbeeefb0883685e264de5e\",KeyHash \"eb272da081567abe0bd3d97ffa397402e1e43dee9b08ee4954da093a\"]))))]\n\n/home/martink/Source/repos/cardano-node-tests/cardano_node_tests/utils/clusterlib.py:251: CLIError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "cluster",
    "time" : {
      "start" : 1601993244272,
      "stop" : 1601993244273,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "change_dir",
    "time" : {
      "start" : 1601992552829,
      "stop" : 1601992552829,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "session_autouse",
    "time" : {
      "start" : 1601992552831,
      "stop" : 1601992552831,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "worker_id",
    "time" : {
      "start" : 1601992552830,
      "stop" : 1601992552830,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "temp_dir",
    "time" : {
      "start" : 1601993219088,
      "stop" : 1601993219088,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cluster_cleanup",
    "time" : {
      "start" : 1601992552830,
      "stop" : 1601992552830,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "tmp_path_factory",
    "time" : {
      "start" : 1601992552828,
      "stop" : 1601992552829,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cluster_manager",
    "time" : {
      "start" : 1601993244271,
      "stop" : 1601993244271,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "temp_dir::0",
    "time" : {
      "start" : 1601993424197,
      "stop" : 1601993424197,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cluster_cleanup::0",
    "time" : {
      "start" : 1601993814695,
      "stop" : 1601993814695,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cluster_manager::0",
    "time" : {
      "start" : 1601993254641,
      "stop" : 1601993254641,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('temp_dir')"
  }, {
    "name" : "parentSuite",
    "value" : "cardano_node_tests.tests"
  }, {
    "name" : "suite",
    "value" : "test_pools"
  }, {
    "name" : "subSuite",
    "value" : "TestStakePool"
  }, {
    "name" : "host",
    "value" : "toolbox"
  }, {
    "name" : "thread",
    "value" : "347064-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "cardano_node_tests.tests.test_pools"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "https://github.com/input-output-hk/cardano-node-tests/blob/43bac3543b7d7cb6fbb89738b68cbc7890cd2d2d/cardano_node_tests/tests/test_pools.py#L861",
    "url" : "https://github.com/input-output-hk/cardano-node-tests/blob/43bac3543b7d7cb6fbb89738b68cbc7890cd2d2d/cardano_node_tests/tests/test_pools.py#L861",
    "type" : "link"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "@pytest.mark.usefixtures('temp_dir')" ]
  },
  "source" : "f9e4fa4769b6cca6.json",
  "parameterValues" : [ ]
}