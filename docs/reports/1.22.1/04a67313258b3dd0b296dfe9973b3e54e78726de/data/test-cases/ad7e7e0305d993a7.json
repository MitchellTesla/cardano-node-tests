{
  "uid" : "ad7e7e0305d993a7",
  "name" : "test_pool_registration_conflicting_certs",
  "fullName" : "cardano_node_tests.tests.test_pools.TestNegative#test_pool_registration_conflicting_certs",
  "historyId" : "6709af4d76b3f3f2caa5f447c521350c",
  "time" : {
    "start" : 1604567365061,
    "stop" : 1604567365273,
    "duration" : 212
  },
  "description" : "Send both pool registration and deregistration certificates in single TX.",
  "descriptionHtml" : "<p>Send both pool registration and deregistration certificates in single TX.</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'TextView type error' in 'An error occurred running a CLI command `cardano-cli shelley transaction sign --tx-body-file conflicting_certs_tx.bod...elegateExtendedSigningKey_ed25519_bip32, GenesisUTxOSigningKey_ed25519 Actual: PaymentVerificationKeyShelley_ed25519\\n'\n +  where 'An error occurred running a CLI command `cardano-cli shelley transaction sign --tx-body-file conflicting_certs_tx.bod...elegateExtendedSigningKey_ed25519_bip32, GenesisUTxOSigningKey_ed25519 Actual: PaymentVerificationKeyShelley_ed25519\\n' = str(CLIError('An error occurred running a CLI command `cardano-cli shelley transaction sign --tx-body-file conflicting_cer...legateExtendedSigningKey_ed25519_bip32, GenesisUTxOSigningKey_ed25519 Actual: PaymentVerificationKeyShelley_ed25519\\n'))\n +    where CLIError('An error occurred running a CLI command `cardano-cli shelley transaction sign --tx-body-file conflicting_cer...legateExtendedSigningKey_ed25519_bip32, GenesisUTxOSigningKey_ed25519 Actual: PaymentVerificationKeyShelley_ed25519\\n') = <ExceptionInfo CLIError('An error occurred running a CLI command `cardano-cli shelley transaction sign --tx-body-file ...endedSigningKey_ed25519_bip32, GenesisUTxOSigningKey_ed25519 Actual: PaymentVerificationKeyShelley_ed25519\\n') tblen=5>.value",
  "statusTrace" : "self = <cardano_node_tests.tests.test_pools.TestNegative object at 0x7f5da77a6190>, cluster = <cardano_node_tests.utils.clusterlib.ClusterLib object at 0x7f5da73d2160>\npool_users = [PoolUser(payment=AddressRecord(address='addr_test1qpuervu3qxqa4zr49pj5w2uhqns60gu509y97vtat0lr7vg7r4z3j368cgepqjrnzrz...cujhl', vkey_file=PosixPath('test_negative_addr1_stake.vkey'), skey_file=PosixPath('test_negative_addr1_stake.skey')))]\npool_data = PoolData(pool_name='pool_hsmd', pool_pledge=5, pool_cost=3, pool_margin=0.01, pool_metadata_url='', pool_metadata_hash='', pool_relay_dns='', pool_relay_ipv4='', pool_relay_port=0)\n\n    @allure.link(helpers.get_vcs_link())\n    def test_pool_registration_conflicting_certs(\n        self,\n        cluster: clusterlib.ClusterLib,\n        pool_users: List[clusterlib.PoolUser],\n        pool_data: clusterlib.PoolData,\n    ):\n        \"\"\"Send both pool registration and deregistration certificates in single TX.\"\"\"\n        node_vrf = cluster.gen_vrf_key_pair(node_name=pool_data.pool_name)\n        node_cold = cluster.gen_cold_key_pair_and_counter(node_name=pool_data.pool_name)\n    \n        pool_reg_cert_file = cluster.gen_pool_registration_cert(\n            pool_data=pool_data,\n            vrf_vkey_file=node_vrf.vkey_file,\n            cold_vkey_file=node_cold.vkey_file,\n            owner_stake_vkey_files=[pool_users[0].stake.vkey_file],\n        )\n    \n        pool_dereg_cert_file = cluster.gen_pool_deregistration_cert(\n            pool_name=pool_data.pool_name,\n            cold_vkey_file=node_cold.vkey_file,\n            epoch=cluster.get_last_block_epoch() + 1,\n        )\n    \n        tx_files = clusterlib.TxFiles(\n            certificate_files=[pool_reg_cert_file, pool_dereg_cert_file],\n            signing_key_files=[\n                pool_users[0].payment.vkey_file,\n                pool_users[0].payment.skey_file,\n                pool_users[0].stake.vkey_file,\n                pool_users[0].stake.skey_file,\n                node_cold.vkey_file,\n                node_cold.skey_file,\n            ],\n        )\n    \n        with pytest.raises(clusterlib.CLIError) as excinfo:\n            cluster.send_tx(\n                src_address=pool_users[0].payment.address,\n                tx_name=\"conflicting_certs\",\n                tx_files=tx_files,\n            )\n>       assert \"TextView type error\" in str(excinfo.value)\nE       AssertionError: assert 'TextView type error' in 'An error occurred running a CLI command `cardano-cli shelley transaction sign --tx-body-file conflicting_certs_tx.bod...elegateExtendedSigningKey_ed25519_bip32, GenesisUTxOSigningKey_ed25519 Actual: PaymentVerificationKeyShelley_ed25519\\n'\nE        +  where 'An error occurred running a CLI command `cardano-cli shelley transaction sign --tx-body-file conflicting_certs_tx.bod...elegateExtendedSigningKey_ed25519_bip32, GenesisUTxOSigningKey_ed25519 Actual: PaymentVerificationKeyShelley_ed25519\\n' = str(CLIError('An error occurred running a CLI command `cardano-cli shelley transaction sign --tx-body-file conflicting_cer...legateExtendedSigningKey_ed25519_bip32, GenesisUTxOSigningKey_ed25519 Actual: PaymentVerificationKeyShelley_ed25519\\n'))\nE        +    where CLIError('An error occurred running a CLI command `cardano-cli shelley transaction sign --tx-body-file conflicting_cer...legateExtendedSigningKey_ed25519_bip32, GenesisUTxOSigningKey_ed25519 Actual: PaymentVerificationKeyShelley_ed25519\\n') = <ExceptionInfo CLIError('An error occurred running a CLI command `cardano-cli shelley transaction sign --tx-body-file ...endedSigningKey_ed25519_bip32, GenesisUTxOSigningKey_ed25519 Actual: PaymentVerificationKeyShelley_ed25519\\n') tblen=5>.value\n\n/home/martink/Source/repos/cardano-node-tests2/cardano_node_tests/tests/test_pools.py:1433: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "cluster_cleanup",
    "time" : {
      "start" : 1604566448486,
      "stop" : 1604566448537,
      "duration" : 51
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "tmp_path_factory",
    "time" : {
      "start" : 1604566448485,
      "stop" : 1604566448486,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "temp_dir",
    "time" : {
      "start" : 1604567215152,
      "stop" : 1604567215152,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "pool_data",
    "time" : {
      "start" : 1604567365060,
      "stop" : 1604567365060,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cluster",
    "time" : {
      "start" : 1604567351243,
      "stop" : 1604567351243,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "session_autouse",
    "time" : {
      "start" : 1604566448537,
      "stop" : 1604566448537,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "change_dir",
    "time" : {
      "start" : 1604566448486,
      "stop" : 1604566448486,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "worker_id",
    "time" : {
      "start" : 1604566448486,
      "stop" : 1604566448486,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cluster_manager",
    "time" : {
      "start" : 1604567351242,
      "stop" : 1604567351242,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "pool_users",
    "time" : {
      "start" : 1604567351243,
      "stop" : 1604567365059,
      "duration" : 13816
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "cluster_cleanup::0",
    "time" : {
      "start" : 1604570988293,
      "stop" : 1604570988293,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "temp_dir::0",
    "time" : {
      "start" : 1604567365304,
      "stop" : 1604567365304,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cluster_manager::0",
    "time" : {
      "start" : 1604567365304,
      "stop" : 1604567365304,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('temp_dir')"
  }, {
    "name" : "parentSuite",
    "value" : "cardano_node_tests.tests"
  }, {
    "name" : "suite",
    "value" : "test_pools"
  }, {
    "name" : "subSuite",
    "value" : "TestNegative"
  }, {
    "name" : "host",
    "value" : "bender-3900x"
  }, {
    "name" : "thread",
    "value" : "10412-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "cardano_node_tests.tests.test_pools"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "https://github.com/input-output-hk/cardano-node-tests/blob/d28a503424b5f9f0359a9e79ea272dfac0f801bd/cardano_node_tests/tests/test_pools.py#L1392",
    "url" : "https://github.com/input-output-hk/cardano-node-tests/blob/d28a503424b5f9f0359a9e79ea272dfac0f801bd/cardano_node_tests/tests/test_pools.py#L1392",
    "type" : "link"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "281a7bb5bd6f1e3e",
      "status" : "passed",
      "time" : {
        "start" : 1604494202169,
        "stop" : 1604494202381,
        "duration" : 212
      }
    }, {
      "uid" : "701484f1a0c4ec88",
      "status" : "passed",
      "time" : {
        "start" : 1604311328151,
        "stop" : 1604311328360,
        "duration" : 209
      }
    }, {
      "uid" : "975e00e0966cdd4d",
      "status" : "broken",
      "statusDetails" : "FileNotFoundError: [Errno 2] No such file or directory: '/home/martink/Source/repos/cardano-node-tests2/tmp/testrun_20201102.log'",
      "time" : {
        "start" : 1604310980725,
        "stop" : 1604310980725,
        "duration" : 0
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "@pytest.mark.usefixtures('temp_dir')" ]
  },
  "source" : "ad7e7e0305d993a7.json",
  "parameterValues" : [ ]
}